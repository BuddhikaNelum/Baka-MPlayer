diff -Naur mxe/src/fontconfig-2-fix_fontconfig.patch mxe.new/src/fontconfig-2-fix_fontconfig.patch
--- mxe/src/fontconfig-2-fix_fontconfig.patch	1969-12-31 19:00:00.000000000 -0500
+++ mxe.new/src/fontconfig-2-fix_fontconfig.patch	2015-02-08 14:05:03.501044000 -0500
@@ -0,0 +1,117 @@
+diff -Naur fontconfig-2.11.1/src/fcdir.c fontconfig-2.11.1.new/src/fcdir.c
+--- fontconfig-2.11.1/src/fcdir.c	2014-01-20 03:14:20.000000000 -0500
++++ fontconfig-2.11.1.new/src/fcdir.c	2015-02-08 13:54:21.752034490 -0500
+@@ -77,14 +77,7 @@
+ 	/*
+ 	 * Nothing in the cache, scan the file
+ 	 */
+-	if (FcDebug () & FC_DBG_SCAN)
+-	{
+-	    printf ("\tScanning file %s...", file);
+-	    fflush (stdout);
+-	}
+ 	font = FcFreeTypeQuery (file, id, blanks, &count);
+-	if (FcDebug () & FC_DBG_SCAN)
+-	    printf ("done\n");
+ 
+ 	/*
+ 	 * Edit pattern with user-defined rules
+@@ -195,7 +188,7 @@
+     base = file + strlen ((char *) file);
+ 
+     if (FcDebug () & FC_DBG_SCAN)
+-	printf ("\tScanning dir %s\n", dir);
++	fprintf (stderr, "[fontconfig] Scanning dir %s\n", dir);
+ 	
+     d = opendir ((char *) dir);
+     if (!d)
+@@ -232,8 +225,29 @@
+     /*
+      * Scan file files to build font patterns
+      */
++    char buf1[512], buf2[512], pad[512], *str = &buf1[0], *prev = &buf2[0], *tmp;
++    int j, diff;
++    prev[0] = pad[0] = 0;
++
+     for (i = 0; i < files->num; i++)
+-	FcFileScanConfig (set, dirs, blanks, files->strs[i], config);
++    {
++        snprintf (str, 512, "\r[%d/%d] %s", i+1, files->num, files->strs[i]);
++
++        for (diff = strlen (prev) - strlen (str), j = 0; diff > 0; diff--, j++)
++            pad[j] = ' ';
++
++        pad[j] = 0;
++
++        if (FcDebug () & FC_DBG_SCAN)
++            fprintf (stderr, "%s%s", str, pad);
++
++        tmp = str; str = prev; prev = tmp;
++
++        FcFileScanConfig (set, dirs, blanks, files->strs[i], config);
++    }
++    
++    if (FcDebug() & FC_DBG_SCAN)
++        fprintf (stderr, "\n[fontconfig] Finished scanning dir %s\n", dir);
+ 
+ bail2:
+     FcStrSetDestroy (files);
+diff -Naur fontconfig-2.11.1/src/fcinit.c fontconfig-2.11.1.new/src/fcinit.c
+--- fontconfig-2.11.1/src/fcinit.c	2014-01-20 03:14:20.000000000 -0500
++++ fontconfig-2.11.1.new/src/fcinit.c	2015-02-08 13:58:30.550529661 -0500
+@@ -35,6 +35,12 @@
+ #pragma message("To suppress these warnings, define FC_NO_MT.")
+ #endif
+ 
++#ifdef _WIN32
++#define _WIN32_IE 0x0500
++#include <shlobj.h>
++#include <malloc.h>
++#endif
++
+ static FcConfig *
+ FcInitFallbackConfig (void)
+ {
+@@ -43,12 +49,42 @@
+     config = FcConfigCreate ();
+     if (!config)
+ 	goto bail0;
++
++#ifdef _WIN32
++    char *buf = malloc(MAX_PATH+1);
++    if (!buf) goto bail1;
++    if (SHGetFolderPathA (NULL, CSIDL_FONTS|CSIDL_FLAG_CREATE, NULL,
++      SHGFP_TYPE_CURRENT, buf) == S_OK) {
++      if (!FcConfigAddDir (config, (FcChar8 *) buf))
++        goto bail2;
++    }
++
++    char *buf2 = malloc (MAX_PATH+1);
++    if (!buf) goto bail2;
++    if (SHGetFolderPathA (NULL, CSIDL_LOCAL_APPDATA|CSIDL_FLAG_CREATE, NULL,
++        SHGFP_TYPE_CURRENT, buf2) == S_OK) {
++        if (buf2[strlen(buf2)-1] != '\\')
++            strcat (buf2, "\\");
++        strcat (buf2, "fontconfig");
++      if (!FcConfigAddCacheDir (config, (FcChar8 *) buf2))
++         goto bail3;
++    }
++#else
+     if (!FcConfigAddDir (config, (FcChar8 *) FC_DEFAULT_FONTS))
+ 	goto bail1;
+     if (!FcConfigAddCacheDir (config, (FcChar8 *) FC_CACHEDIR))
+ 	goto bail1;
++#endif
++
+     return config;
+ 
++#ifdef _WIN32
++bail3:
++    free(buf2);
++bail2:
++    free(buf);
++#endif
++
+ bail1:
+     FcConfigDestroy (config);
+ bail0:
